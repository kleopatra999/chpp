*****  Password: -*- mode:outline; minor-mode:outl-mouse -*- (top secret) *****

I les ma grad des NEWS durch und dazu fallt ma des ein:

> ..ohne '<>' ein makro verwendes, dass nicht gibt, wird der string eingeset..
* Naja schon in ordnung aber wir sollten auch warnings einbaun, die immer dann
* wenn man was seltsames macht und so, die aber mit -W eingschalten werden tun
* koennen machen sollen

> die funktionen issueWarning() und issueError(), mi
* was san den des fuer seltsame funtionen ??
* die san mir zu bieder
* i hab brauch fuer meine errors scho a varargs string fun, 
* sonst gib i keine aus

* .. also ich hab commandWarning und commandError fuer fehler in commands
* (hab i grad entdeckt)
* am besten du leitest die um wo immer du sie haben willst - oder ?

> innerhalb von mathematischen ausdruecken das metazeichen fuer makros weg..
* hehehe .. des war ja klar, hab i nur no net gsagt ghabt
* schliesslich isses beim TF ja a so, und des rult voll

> ich hab vier neue loop-konstrukte eingefuehrt.
> %dowhile(%i ...
* hmm wie isn das mit while und for , wenn man macht
* for( %i, .. (%i is laufvariable) und dieses i dann aber waehrendessen
* erhoet, so packt ers eigentlich net, sondern for-t doch genau die anzahl
* durch, oder ?


> neue konvention fuers TODO file: wenn ein punkt erledigt ist, bitte nicht loeschen, sondern
>  ein steandal (asterix) aus dem plus machen.
* no nix vom outline mode ghoert ? :)

> hab file-handling eingefuert
* i packs geistig net ..

> () .. [] hash scheisse
* hmm hmm hmm .. gor net bled
* allerdings wenn schon, dann den schon:
*  1.) soll ma hashes und arrays machen, oder nur hashes
*       des problem waer eher die syntax ..
*  2.) angenommen nur hash scheisse dann:
*       die hash tables muessen mehrdimensional sein
*       der hash key darf entweder ein string oder ein int sein (logisch)
*       auf ein mehrdimensionales hash zugreifen geht so:
*          name[schani,1]  .. mark
*          name[schani,2]  .. probst
*       allerdings koennt ma das indizieren wieder hashig machen, also
*       mehrfach gehasht:
*          name[schani,vorname] und name[schani,nachname]
*       das zuweisen so eines mehrdimensionalen hashes funct dann etwa so
*             %define(name[schani,1],mark) %define(name[schani,2],probst)
*       bzw.  %define(name[schani], {mark, probst})
*       oder so aehnlich
*    diese mehrdimensionalen hashes/arrays machen vieles viel leichter
*    so ungefaehr gibts des naemlich in LPC (MUD C dialekt)

> neues makro: pipe,
* na alert

* da kommt ma grad a urcole idee, bau ma einfach mail functionen ein
* dann kann ma den chakotay als mail identifizierer einsetzten
* oder auch als fakemailer ..
* oder gar als mailbomber
* oder gar als fakemailbomber

> test/tautogen
* pfffffffffffffff .. jetz pack is nimma
* aber irgendwie ist der random net sehr randomig ..

> zeig die scheisse einmal dem meller und insbes auch dem ed.
* kann i net , weil heut schon samstag ist, und morgen heribertstag
* aber der ed taets geistig eh net packen ..

> schani, ??.7.1997, irgendwann
* hmm hu du hostas gut, kannst da umadumproggen die ganze wochen
* waehrend wir die cslab rechna ausernander nehmen
* zambaun
* installieren
* nochmal installieren
* wieder ausernandernehmen
* wieder zambaun
* schon wieder installieren ... und so weida

** TODO sektion :

> ist es ok, wenn initCommands() mehre
* naja, net wirklich, i denk mal drueber nach

> + wir brauchen eine moeglichkeit, dass am ende einer zeile doch kein zeilenende ausgegeben wird.
>   beispiel:
>
>  ...
>  blabla
>  #ifdef iagndwos
>  ...
>
>  es ist momentan nicht moeglich, nach blabla kein zeilenende ausgeben zu lassen. mein
>  vorschlag: ein \ (moeglicherweise waehlbar) am ende der zeile (also als echtes letztes
* versteh i net
* weil wenn nach blabla kein zeilenende is, dann parse ich das #ifdef ja eh nicht
* und dann kannst ja gleich schreiben:

blabla #ifdef iagnwas

* oder ?

> scheisse.c mit -Wall c
* samma bei sysprog ???????????????? ;)
